/*
---
name: _lattice()
category:
  - core/abstract
  - core/abstract/grid-system/lattice
---
Abstract row component of flexbox based grid system

### scss
```scss
.c-lattice {
  @include _lattice();

  &__col {
    @include _lattice__col();

    &--1-3 {
      @include _lattice__col(1, 3);
    }
  }
}
```

### html
```html
<div class="c-lattice">
  <div class="c-c-lattice__col c-row__c-lattice--1-3">
    ...
  </div>
</div>
```
*/

@mixin _lattice() {
  $coefficient: .5;
  @include _row();
  @include _margin-right($coefficient / 2 * -1);
  @include _margin-left($coefficient / 2 * -1);
  @include _margin-bottom($coefficient * -1);

  @include _media-min(md) {
    $coefficient: 1;
    @include _margin-right($coefficient / 2 * -1);
    @include _margin-left($coefficient / 2 * -1);
    @include _margin-bottom($coefficient * -1);
  }
}

/*
---
name: _lattice__col()
category:
  - core/abstract
  - core/abstract/grid-system/lattice
---
Abstract column element of flexbox based grid system

### scss
```scss
//
// @param  int  $columns      molecule column size
// @param  int  $max-columns  denominator column size
//

.c-lattice {
  @include _lattice();

  &__col {
    @include _lattice__col();

    &--1-3 {
      @include _lattice__col(1, 3);
    }
  }
}
```

### html
```html
<div class="c-lattice">
  <div class="c-c-lattice__col c-row__c-lattice--1-3">
    ...
  </div>
</div>
```
*/

@mixin _lattice__col($columns: null, $max-columns: null) {
  $coefficient: .5;
  @include _row__col($columns, $max-columns);
  @include _padding-right($coefficient / 2, true);
  @include _padding-left($coefficient / 2, true);
  @include _margin-bottom($coefficient);

  @include _media-min(md) {
    $coefficient: 1;
    @include _padding-right($coefficient / 2, true);
    @include _padding-left($coefficient / 2, true);
    @include _margin-bottom($coefficient);
  }
}

/*
---
name: _lattice__col--width()
category:
  - core/abstract
  - core/abstract/grid-system/lattice
---
Sets column width of flexbox based grid system

### scss
```scss
//
// @param  length  $width
//

.c-lattice {
  @include _lattice();

  &__col {
    @include _lattice__col(1, 2);

    @include _media-min(lg) {
      @include _lattice__col--width(1 / 3 * 100%);
    }
  }
}
```
*/

@mixin _lattice__col--width($width) {
  @include _row__col--width($width);
}
